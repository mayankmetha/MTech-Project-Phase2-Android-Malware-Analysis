function regLoss(w):
    return (0.5 * (w * w.transpose()))

function fx(x,y,b):
    return ((w * x.transpose()) + b)

function reducedSum(a):
    return reduceSum(a)

function hingeLoss(w,b,x,y):
    return reducedSum(maximum(0, 1 - (y * fx(x,y,b))))

function Lv(w,b,x,y,C):
    return minimum(regLoss(w) + (C * hingeLoss))

function gradient(x,y,b):
	return ((y * fx(x,y,b)) < 1) ? -y : 0

function Lw(w,b,x,y,C):
	return (w + (C * reducedSum(gradient(x,y,b)*x)))

function Lb(b,x,y,C):
	return C * reducedSum(gradient(x,y,b))

eta = eta * gamma * s(t)
w = l2-norm(w - (eta * Lw(w,b,x,y,C)))
b = b - (eta*Lb(b,x,y,C))

s(t) = 2^(-0.01 * t)/sqrt(n)
gamma = {10,20, â€¦, 70}
eta(0) = 0.5
normalization is l2 regularization

