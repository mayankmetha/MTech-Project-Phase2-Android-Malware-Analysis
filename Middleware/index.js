var express = require('express');
var path = require('path');
var multer = require('multer');
var bodyParser = require('body-parser');
var fs = require('fs');
const exec = require('child_process').exec;

const uploadFolder = __dirname+"/../test/raw/";
const reportFolder = __dirname+"/../test/report/";

const storeage = multer.diskStorage({
    destination: function(req, file, cb) {
        cb(null, uploadFolder);
    },
    filename: function(req, file, cb) {
        cb(null, "apk");
    }
});

const upload = multer({storage: storeage});

var limiter = {};
function reduceLimit() {
    setTimeout(reduceLimit,(4*60*60*1000));
    if(Object.keys(limiter).length === 0) {
        return;
    } else {
        for (var key in limiter){
            if(limiter[key] >= 1) {
                limiter[key] = limiter[key] - 1;
            }
        }
    }
}

var app = express();
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));

app.get('/', (req, res) => {
    res.sendFile(path.resolve(__dirname+'/../WebApp/html/login.html'));
});

app.get('/home', (req, res) => {
    res.sendFile(path.resolve(__dirname+'/../WebApp/html/home.html'));
});

app.get('/report', (req, res) => {
    res.sendFile(path.resolve(__dirname+'/../WebApp/html/report.html'));
});

app.get('/limit', (req, res) => {
    res.sendFile(path.resolve(__dirname+'/../WebApp/html/reportLimit.html'));
});

app.get('/css/style.css', (req, res) => {
    res.sendFile(path.resolve(__dirname+'/../WebApp/css/style.css'));
});

app.get('/js/upload.js', (req, res) => {
    res.sendFile(path.resolve(__dirname+'/../WebApp/js/upload.js'));
});

app.get('/js/jquery.js', (req, res) => {
    res.sendFile(path.resolve(__dirname+'/../WebApp/js/jquery.js'));
});

app.get('/js/report.js', (req, res) => {
    res.sendFile(path.resolve(__dirname+'/../WebApp/js/report.js'));
});

app.get('/uploadLimit/:id', (req, res) => {
    if(limiter[req.params.id] == undefined || limiter[req.params.id] < 6) {
        res.send("0");
    } else {
        res.send("1");
    }
});

app.post('/upload', upload.single("Upload APK"), (req,res) => {
    if(limiter[req.body.uid] == undefined || limiter[req.body.uid] < 6) {
        if(limiter[req.body.uid] == undefined) {
            limiter[req.body.uid] = 1;
        } else {
            limiter[req.body.uid] = limiter[req.body.uid] + 1;
        }
        const exe = exec('openssl dgst -sha256 '+uploadFolder+'/apk | cut -d" " -f2');
        var string = '';
        exe.stdout.on('data', (buf) => string += buf.toString()).on('end', () => {
            string = string.trim();
            var result = '';
            const nexe = exec('./redirectReport '+string);
            nexe.stdout.on('data', (buf) => result += buf.toString()).on('end', () => {
                result = result.trim();
                if(result=='') {
                    exec('./dataextract');
                }
            });
            res.redirect('/report?q='+string);
        });
    } else {
        exec('rm -rf '+uploadFolder+'/apk');
        res.redirect('/limit');
    }
});

app.get('/report/:hash', (req, res) => {
    const exe = exec('./redirectReport '+req.params.hash);
    var string = '';
    exe.stdout.on('data', (buf) => string += buf.toString()).on('end', () => {
        res.send(string);
    });
});

app.listen(8080, () => {
    console.log("http://localhost:8080");
    reduceLimit();
});
