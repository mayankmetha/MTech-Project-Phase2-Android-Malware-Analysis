import h5py
import numpy as np
import tensorflow as tf
import pandas as pd
import sys
import json

def setReason(data):
    tmpReason = []
    for i in range(len(data)):
        group,reason = str(data[i]).split("::")
        if group=="hardware":
            tmpReason.append("App is using "+reason+" feature.")
        elif group=="permission":
            tmpReason.append("App has requested permission "+reason+".")
        elif group=="activity" or group=="service" or group=="receiver" or group=="provider":
            tmpReason.append("App may have a suspicious component "+reason+".")
        elif group=="intent-filter":
            tmpReason.append("App may trigger "+reason+".")
        elif group=="restricted-api":
            tmpReason.append("App used api call "+reason+" that needs permission.")
        elif group=="used-permission":
            tmpReason.append("App used "+reason+" permission.")
        elif group=="suspicious-api":
            tmpReason.append("App used a suspicious api that performs "+reason+".")
        elif group=="url":
            tmpReason.append("App is communication with "+reason+".")
    return tmpReason

df = pd.read_csv('../test/csv/'+sys.argv[1]+'.csv')
h5f = h5py.File('../Model/model.h5','r')
test_x = tf.Variable(df.iloc[0].to_numpy(), dtype = np.float32)
w = tf.Variable(h5f['w1'][()], dtype = np.float32)
b = tf.Variable(h5f['b1'][()], dtype = np.float32)
print(w.shape,test_x.shape)
h5f.close()
dump={}
dump["label"] = "malware" if(tf.tensordot(w,test_x,1)+b)>=0 else "not a malware"
vec = (w*test_x).numpy()
vec = vec.reshape(vec.shape[1])
vec = (vec+1)*(0.5)
sorted_vec = np.argsort(vec)
df = pd.read_hdf('../Dataset/datasetMap.h5',key='dfmap').drop(0,axis=1)
per,val = setReason(df.iloc[sorted_vec[-5:]].values[0:5].reshape([5])),vec[sorted_vec[-5:]]
tmp = {}
for i in range(5):
    dump["feature"+str(i)] = {"value":str(round(val[i],2)),"string": str(per[i])}
f = open('../test/report/'+sys.argv[1]+'','w')
f.write(json.dumps(dump))
f.close()
