import pandas as pd
import shutil
import os
import re
import xml.dom.minidom

mapping = '../../Dataset/PermissionApiMapping/apmapping'
df = pd.read_csv(mapping)

inst = set()
path = os.getcwd()+"/../../dump/"
smaliPath = ""
for(dpath,dnames,fnames) in os.walk(path):
    if 'smali' in dnames:
        smaliPath = dpath+"/smali/"
        break

for(dpath,dnames,fnames) in os.walk(smaliPath):
    for fname in fnames:
        f = open(dpath+'/'+fname,'r')
        for _ in f.readlines():
            inst = inst.union(set(re.findall("Landroid.*\-\>.*\(",_)))
            inst = inst.union(set(re.findall("Lcom.*\-\>.*\(",_)))
            inst = inst.union(set(re.findall("Ljava.*\-\>.*\(",_)))
            inst = inst.union(set(re.findall("Lorg.*\-\>.*\(",_)))
        f.close()

tmp = set()
for _ in inst:
    tmp.add(_[1:-1])
instructions = list(tmp)

per = set()
for x in instructions:
    tmp = set(df[df['Api'] == x].Permission.tolist())
    if len(tmp):
        per = per.union(tmp)
permissions = list(per)

print("I: Removing unused permissions")

for(dpath,dnames,fnames) in os.walk(path):
    if 'AndroidManifest.xml' in fnames and not dpath.endswith('original'):
        tree = xml.dom.minidom.parse(dpath+'/AndroidManifest.xml')
        for _ in tree.documentElement.getElementsByTagName("uses-permission"):
            flag = 1
            per = ""
            for f in permissions:
                if _.getAttribute("android:name").startswith(f):
                    flag = 0
                    per = ""
                if flag == 1:
                    per = _.getAttribute("android:name")
            if flag == 1:
                print("\t"+per+" permission removed!")
                parent = _.parentNode
                parent.removeChild(_)

        f = open(dpath+'/AndroidManifest.xml','w')
        f.write(tree.toxml())
        f.close()
